// <auto-generated />
using System;
using LabApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabApi.Migrations
{
    [DbContext(typeof(LabApiContext))]
    [Migration("20230426224128_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LabApi.Models.AtendimentoModel", b =>
                {
                    b.Property<int>("IdAtendimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ATEND");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtendimento"));

                    b.Property<DateTime>("DataAtendimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATEND");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoIdPessoa")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OBSERVACOES");

                    b.Property<int?>("PacienteIdPessoa")
                        .HasColumnType("int");

                    b.HasKey("IdAtendimento");

                    b.HasIndex("MedicoIdPessoa");

                    b.HasIndex("PacienteIdPessoa");

                    b.ToTable("ATENDIMENTOS");
                });

            modelBuilder.Entity("LabApi.Models.PessoaModel", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PESSOA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPessoa"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Genero")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("GENERO");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_COMPLETO");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("IdPessoa");

                    b.ToTable("PESSOA", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("LabApi.Models.EnfermeiroModel", b =>
                {
                    b.HasBaseType("LabApi.Models.PessoaModel");

                    b.Property<string>("COFEN_UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COFEN/UF");

                    b.Property<int>("IdEnfermeiro")
                        .HasColumnType("int")
                        .HasColumnName("ID_ENFERMEIRO");

                    b.Property<string>("InstituicaoEnsinoFormacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("INSTITUIÇÃO_ENSINO_FORMACAO");

                    b.ToTable("ENFERMEIROS");

                    b.HasData(
                        new
                        {
                            IdPessoa = 3,
                            CPF = "132.147.698-20",
                            DataNascimento = new DateTime(1989, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            NomeCompleto = "Mateus Raimundo Aragão",
                            Telefone = "48999251200",
                            COFEN_UF = "186.566/SC",
                            IdEnfermeiro = 0,
                            InstituicaoEnsinoFormacao = "UFSC"
                        },
                        new
                        {
                            IdPessoa = 4,
                            CPF = "825.497.397-01",
                            DataNascimento = new DateTime(1990, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            NomeCompleto = "Sarah Isabelle",
                            Telefone = "48991002564",
                            COFEN_UF = "162.780/SC",
                            IdEnfermeiro = 0,
                            InstituicaoEnsinoFormacao = "UDESC"
                        });
                });

            modelBuilder.Entity("LabApi.Models.MedicoModel", b =>
                {
                    b.HasBaseType("LabApi.Models.PessoaModel");

                    b.Property<string>("CRM_UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CRM/UF");

                    b.Property<int>("Especializacao_Clinica")
                        .HasColumnType("int")
                        .HasColumnName("ESPECIALIZACAO_CLINICA");

                    b.Property<int>("Estado_No_Sistema")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_NO_SISTEMA");

                    b.Property<string>("InstituicaoEnsinoFormacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("INSTITUIÇÃO_ENSINO_FORMACAO");

                    b.Property<int>("TotalAtendimentos")
                        .HasColumnType("int")
                        .HasColumnName("TOTAL_ATENDIMENTOS");

                    b.ToTable("MEDICOS");

                    b.HasData(
                        new
                        {
                            IdPessoa = 1,
                            CPF = "140.159.530-14",
                            DataNascimento = new DateTime(1989, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            NomeCompleto = "Julia Vitória Barros",
                            Telefone = "48999201511",
                            CRM_UF = "215.630/RJ",
                            Especializacao_Clinica = 1,
                            Estado_No_Sistema = 1,
                            InstituicaoEnsinoFormacao = "URJ",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            IdPessoa = 2,
                            CPF = "198.230.852-99",
                            DataNascimento = new DateTime(1989, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            NomeCompleto = "Lorenzo Benedito Monteiro",
                            Telefone = "48992015021",
                            CRM_UF = "125.541/SC",
                            Especializacao_Clinica = 5,
                            Estado_No_Sistema = 1,
                            InstituicaoEnsinoFormacao = "UDESC",
                            TotalAtendimentos = 0
                        });
                });

            modelBuilder.Entity("LabApi.Models.PacienteModel", b =>
                {
                    b.HasBaseType("LabApi.Models.PessoaModel");

                    b.Property<string>("Alergias")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ALERGIAS");

                    b.Property<string>("ContatoEmergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTATO_EMERGENCIA");

                    b.Property<string>("Convenio")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONVENIO");

                    b.Property<string>("CuidadosEspecificos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CUIDADOS_ESPECIAIS");

                    b.Property<int>("StatusAtendId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TotalAtendimentos")
                        .HasColumnType("int")
                        .HasColumnName("TOTAL_ATENDIMENTOS");

                    b.Property<int>("statusAtendimento")
                        .HasColumnType("int")
                        .HasColumnName("STATUS_ATENDIMENTO");

                    b.ToTable("PACIENTES");

                    b.HasData(
                        new
                        {
                            IdPessoa = 5,
                            CPF = "523.252.349-08",
                            DataNascimento = new DateTime(1980, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            NomeCompleto = "Alexandre Lorenzo da Mota",
                            Telefone = "4828454720",
                            Alergias = "Rinite",
                            ContatoEmergencia = "4833259547",
                            Convenio = "Bradesco Saude",
                            CuidadosEspecificos = "não possui",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        },
                        new
                        {
                            IdPessoa = 6,
                            CPF = "142.154.935-28",
                            DataNascimento = new DateTime(1996, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            NomeCompleto = "Gabrielly Vitória Sueli Lopes",
                            Telefone = "4830459633",
                            Alergias = "Asma Bronquica",
                            ContatoEmergencia = "4899631200",
                            Convenio = "One Health",
                            CuidadosEspecificos = "faz uso regular da bombinha",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        },
                        new
                        {
                            IdPessoa = 7,
                            CPF = "670.534.738-48",
                            DataNascimento = new DateTime(1975, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            NomeCompleto = "Aurora Francisca Marcela Bernardes",
                            Telefone = "4833254796",
                            Alergias = "Leite e derivados",
                            ContatoEmergencia = "4836210056",
                            Convenio = "Unimed",
                            CuidadosEspecificos = "faz reposição de hormonios",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        },
                        new
                        {
                            IdPessoa = 8,
                            CPF = "709.924.665-80",
                            DataNascimento = new DateTime(1969, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            NomeCompleto = "Manoel Renato Theo da Cunha",
                            Telefone = "4891224420",
                            Alergias = "Frutos do Mar",
                            ContatoEmergencia = "4833002100",
                            Convenio = "One Health",
                            CuidadosEspecificos = "não possui",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        },
                        new
                        {
                            IdPessoa = 9,
                            CPF = "253.415.630-69",
                            DataNascimento = new DateTime(1991, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            NomeCompleto = "Bruna Rosângela Francisca",
                            Telefone = "4899951120",
                            Alergias = "Não possui",
                            ContatoEmergencia = "4833256612",
                            Convenio = "Unimed",
                            CuidadosEspecificos = "não possui",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        },
                        new
                        {
                            IdPessoa = 10,
                            CPF = "506.250.120-44",
                            DataNascimento = new DateTime(1993, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            NomeCompleto = "Luiz Gustavo Costa",
                            Telefone = "4899220000",
                            Alergias = "Urticária",
                            ContatoEmergencia = "4830459992",
                            Convenio = "Bradesco Saude",
                            CuidadosEspecificos = "não possui",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        },
                        new
                        {
                            IdPessoa = 11,
                            CPF = "513.327.137-93",
                            DataNascimento = new DateTime(1989, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            NomeCompleto = "Mariana Daniela Aragão",
                            Telefone = "4833090054",
                            Alergias = "Rinite, Bronquite, Camarão",
                            ContatoEmergencia = "48999520021",
                            Convenio = "SulAmérica Saude",
                            CuidadosEspecificos = "não possui",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        },
                        new
                        {
                            IdPessoa = 12,
                            CPF = "922.265.830-25",
                            DataNascimento = new DateTime(1972, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            NomeCompleto = "Emanuelly Regina",
                            Telefone = "48999195520",
                            Alergias = "Não possui",
                            ContatoEmergencia = "4833149951",
                            Convenio = "Bradesco Saude",
                            CuidadosEspecificos = "não possui",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        },
                        new
                        {
                            IdPessoa = 13,
                            CPF = "867.882.944-37",
                            DataNascimento = new DateTime(1969, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            NomeCompleto = "Jennifer Vanessa Marlene Peixoto",
                            Telefone = "48999000015",
                            Alergias = "Alergia a Niquel",
                            ContatoEmergencia = "4833133021",
                            Convenio = "One Health",
                            CuidadosEspecificos = "não possui",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        },
                        new
                        {
                            IdPessoa = 14,
                            CPF = "750.120.356-20",
                            DataNascimento = new DateTime(1981, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            NomeCompleto = "Joaquim Leandro Julio Silva",
                            Telefone = "4899101220",
                            Alergias = "Camarão",
                            ContatoEmergencia = "4830492210",
                            Convenio = "SulAmérica Saude",
                            CuidadosEspecificos = "não possui",
                            StatusAtendId = 0,
                            StatusId = 0,
                            TotalAtendimentos = 0,
                            statusAtendimento = 0
                        });
                });

            modelBuilder.Entity("LabApi.Models.AtendimentoModel", b =>
                {
                    b.HasOne("LabApi.Models.MedicoModel", "Medico")
                        .WithMany("AtendimentosMedico")
                        .HasForeignKey("MedicoIdPessoa");

                    b.HasOne("LabApi.Models.PacienteModel", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteIdPessoa");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("LabApi.Models.EnfermeiroModel", b =>
                {
                    b.HasOne("LabApi.Models.PessoaModel", null)
                        .WithOne()
                        .HasForeignKey("LabApi.Models.EnfermeiroModel", "IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LabApi.Models.MedicoModel", b =>
                {
                    b.HasOne("LabApi.Models.PessoaModel", null)
                        .WithOne()
                        .HasForeignKey("LabApi.Models.MedicoModel", "IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LabApi.Models.PacienteModel", b =>
                {
                    b.HasOne("LabApi.Models.PessoaModel", null)
                        .WithOne()
                        .HasForeignKey("LabApi.Models.PacienteModel", "IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LabApi.Models.MedicoModel", b =>
                {
                    b.Navigation("AtendimentosMedico");
                });
#pragma warning restore 612, 618
        }
    }
}
